

name: Dev-Multi-Module Build and Deploy

on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - dev
  workflow_dispatch:

jobs:
  changes:
    runs-on: ubuntu-latest
    env:
      SPRING_PROFILES_ACTIVE: "dev"

    outputs:
      common: ${{ steps.filter.outputs.common }}
      batch: ${{ steps.filter.outputs.job }}
    steps:
      - uses: actions/checkout@v3
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            common:
              - 'common/**'
            batch:
              - 'batch/**'
            auction:
              - 'auction/**'
            notification:
              - 'notification/**'
            service:
              - 'service/**'
            user:
              - 'user/**'

  build-and-deploy-batch:
    needs: changes
    if: ${{ needs.changes.outputs.batch == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      # Gradle 빌드 추가
      - name: Build with Gradle
        run: ./gradlew :batch:build #바꿔야됨

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Amazon ECR
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          ECR_BATCH_LOGIN_URI : ${{secrets.ECR_COMMON_LOGIN_URI}} #바꿔야됨
        #바꿔야됨
        run: |
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_BATCH_LOGIN_URI  

      # Docker 이미지를 빌드하고 푸시
      - name: Build and push image to ECR
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./common/Dockerfile #바꿔야됨
          push: true
          tags: ${{ secrets.BATCH_REPOSITORY_URI }}:${{secrets.IMAGE_TAG}} #바꿔야됨





  build-and-deploy-common:
    needs: changes
    if: ${{ needs.changes.outputs.common == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      # Gradle 빌드 추가
      - name: Build with Gradle
        run: ./gradlew :common:build -x test

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Amazon ECR
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          ECR_COMMON_LOGIN_URI : ${{secrets.ECR_COMMON_LOGIN_URI}}
        run: |
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_COMMON_LOGIN_URI

      # Docker 이미지를 빌드하고 멀티 플랫폼으로 푸시
      - name: Build and push image to ECR
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./common/Dockerfile
          push: true
          tags: ${{ secrets.COMMON_REPOSITORY_URI }}:${{secrets.IMAGE_TAG}}

      - name: Start SSH Agent and Add Key
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      - name: Deploy Common to EC2
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USER: ${{ secrets.EC2_USER }}
          COMMON_REPOSITORY_URI: ${{ secrets.COMMON_REPOSITORY_URI }}
          IMAGE_TAG : ${{secrets.IMAGE_TAG}}
        run: |
          ssh -o StrictHostKeyChecking=no "$EC2_USER@$EC2_HOST"
            docker pull $COMMON_REPOSITORY_URI:$IMAGE_TAG
            docker stop common-container || true
            docker rm common-container || true
            docker run -d --name common-container -p 8082:8082 $COMMON_REPOSITORY_URI:$IMAGE_TAG
          
          
      

