name: Dev-Multi-Module Build and Deploy

on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - dev
  workflow_dispatch:

jobs:
  changes:
    runs-on: ubuntu-latest
    env:
      SPRING_PROFILES_ACTIVE: "dev"  # 개발 파이프라인에서는 dev, 운영 파이프라인에서는 prod로 설정

    outputs:
      common: ${{ steps.filter.outputs.common }}
      batch: ${{ steps.filter.outputs.batch }}
    steps:
      - uses: actions/checkout@v3
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            common:
              - 'module-common/**'
              - 'docker-compose.common.yml'
            batch:
              - 'module-batch/**'
              - 'docker-compose.batch.yml'

  build-and-deploy-batch:
    needs: changes
    if: ${{ needs.changes.outputs.batch == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Build with Gradle
        run: ./gradlew :module-batch:build

      - name: Log in to Amazon ECR
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin ${{ secrets.BATCH_REPOSITORY_URI }}

      - name: Build and Push Batch Image
        env:
          BATCH_REPOSITORY_URI: ${{ secrets.BATCH_REPOSITORY_URI }}
        run: |
          docker build -t $BATCH_REPOSITORY_URI:latest -f module-batch/Dockerfile .
          docker push $BATCH_REPOSITORY_URI:latest

  build-and-deploy-common:
    needs: changes
    if: ${{ needs.changes.outputs.common == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Build with Gradle
        run: ./gradlew :module-common:build

      - name: Log in to Amazon ECR
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin ${{ secrets.COMMON_REPOSITORY_URI }}

      - name: Build and Push Common Image
        env:
          COMMON_REPOSITORY_URI: ${{ secrets.COMMON_REPOSITORY_URI }}
        run: |
          docker build -t $COMMON_REPOSITORY_URI:latest -f module-common/Dockerfile .
          docker push $COMMON_REPOSITORY_URI:latest
