

name: Multi-Module Build and Deploy

on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - dev
  workflow_dispatch:

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      common: ${{ steps.filter.outputs.common }}
      batch: ${{ steps.filter.outputs.batch }}
    steps:
      - uses: actions/checkout@v3
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            common:
              - 'module-common/**'
              - 'docker-compose.common.yml'
            batch:
              - 'module-batch/**'
              - 'docker-compose.batch.yml'

  build-and-deploy-batch:
    needs: changes
    if: ${{ needs.changes.outputs.batch == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Check Docker Compose Version and Install if Needed
        run: |
          if ! docker-compose --version; then
            curl -L "https://github.com/docker/compose/releases/download/$(curl -s https://api.github.com/repos/docker/compose/releases/latest | jq -r .tag_name)/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
            chmod +x /usr/local/bin/docker-compose
          fi

      - name: Log in to Amazon ECR
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin ${{ secrets.BATCH_REPOSITORY_URI }}

      - name: Build and Push Batch Image
        env:
          BATCH_REPOSITORY_URI: ${{ secrets.BATCH_REPOSITORY_URI }}
        run: |
          set -e
          docker-compose -f docker-compose.batch.yml build
          docker-compose -f docker-compose.batch.yml push

      - name: Deploy Batch to ECS
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          aws ecs update-service --cluster ${{ secrets.ECS_CLUSTER_NAME }} \
          --service batch-service --force-new-deployment

  build-and-deploy-common:
    needs: changes
    if: ${{ needs.changes.outputs.common == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Check Docker Compose Version and Install if Needed
        run: |
          if ! docker-compose --version; then
            curl -L "https://github.com/docker/compose/releases/download/$(curl -s https://api.github.com/repos/docker/compose/releases/latest | jq -r .tag_name)/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
            chmod +x /usr/local/bin/docker-compose
          fi

      - name: Log in to Amazon ECR
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin ${{ secrets.COMMON_REPOSITORY_URI }}

      - name: Build and Push Common Image
        env:
          COMMON_REPOSITORY_URI: ${{ secrets.COMMON_REPOSITORY_URI }}
        run: |
          set -e
          docker-compose -f docker-compose.common.yml build
          docker-compose -f docker-compose.common.yml push

      - name: Deploy Common to ECS
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          aws ecs update-service --cluster ${{ secrets.ECS_CLUSTER_NAME }} \
          --service common-service --force-new-deployment