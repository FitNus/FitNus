spring:
  config:
    import: optional:file:.env[.properties]
  datasource:
    url: ${DEV_DB_URL}               # 개발 환경에 맞는 DB URL
    username: ${DEV_DB_USERNAME}     # 개발 환경 DB 사용자 이름
    password: ${DEV_DB_PASSWORD}     # 개발 환경 DB 비밀번호
    driver-class-name: com.mysql.cj.jdbc.Driver

  servlet:
    multipart:
      enabled: true
      max-file-size: 5MB             # 개발 환경에서는 로컬과 같은 설정 유지
      max-request-size: 5MB

  jpa:
    hibernate:
      ddl-auto: update               # 개발 환경에서는 데이터베이스 구조를 업데이트
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
        show_sql: true               # 개발 환경에서는 SQL 로그 활성화
        format_sql: true
        use_sql_comments: true

jwt:
  secret:
    key: ${DEV_JWT_SECRET_KEY}       # 개발 환경에 맞는 JWT 비밀 키

slack:
  webhook:
    token: ${DEV_SLACK_WEBHOOK_TOKEN} # 개발 환경의 슬랙 웹훅 토큰

cloud:
  aws:
    credentials:
      access-key: ${DEV_AWS_ACCESS_KEY}
      secret-key: ${DEV_AWS_SECRET_KEY}
    region:
      static: ${DEV_AWS_REGION}
    s3:
      bucket: ${DEV_AWS_BUCKET_NAME}

---
spring:
  data:
    redis:
      host: ${DEV_REDIS_HOST}        # 개발 환경 Redis 호스트
      port: ${DEV_REDIS_PORT}        # 개발 환경 Redis 포트

admin:
  token: ${DEV_ADMIN_TOKEN}          # 개발 환경에 맞는 관리자 토큰

owner:
  token: ${DEV_OWNER_TOKEN}          # 개발 환경에 맞는 소유자 토큰

kakao:
  client:
    id: ${DEV_KAKAO_CLIENT_ID}
    secret: ${DEV_KAKAO_CLIENT_SECRET}
    redirect: ${DEV_KAKAO_REDIRECT_URL}
  api:
    key: ${DEV_KAKAO_REST_API_KEY}